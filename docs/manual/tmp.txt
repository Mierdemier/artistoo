<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <base data-ice="baseUrl" href="../">
  <title data-ice="title">Manual | artistoo</title>
  <link type="text/css" rel="stylesheet" href="css/style.css">
  <link type="text/css" rel="stylesheet" href="css/prettify-tomorrow.css">
  <script src="script/prettify/prettify.js"></script>
  <script src="script/manual.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
MathJax = {
	tex: {
		inlineMath: [['$', '$']]
	}
};
</script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
</head>
<body class="layout-container manual-root" data-ice="rootContainer">

<header>
  <a href="./">Home</a>
  <a href="./manual/index.html" data-ice="manualHeaderLink">Manual</a>
  <a href="identifiers.html">Reference</a>
  <a href="source.html">Source</a>
  <a href="test.html" data-ice="testLink">Test</a>
  <div class="search-box">
  <span>
    <img src="./image/search.png">
    <span class="search-input-edge"></span><input class="search-input"><span class="search-input-edge"></span>
  </span>
    <ul class="search-result"></ul>
  </div>
<a style="position:relative; top:3px;" href="https://github.com/ingewortel/artistoo"><img width="20px" src="./image/github.png"></a></header>

<nav class="navigation" data-ice="nav"><div class="manual-toc-root">
  
<div data-ice="manual">
    <ul class="manual-toc">
      
    <li data-ice="manualNav" class="indent-h1" data-link="manual/introCPM.html"><a href="manual/introCPM.html" data-ice="link">An introduction to the CPM</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/introCPM.html"><a href="manual/introCPM.html#a-brief-history-of-the-cpm" data-ice="link">A brief history of the CPM</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/introCPM.html"><a href="manual/introCPM.html#cpm--basic-principle" data-ice="link">CPM: basic principle</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/introCPM.html"><a href="manual/introCPM.html#a-note-on-terminology" data-ice="link">A note on terminology</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/introCPM.html"><a href="manual/introCPM.html#simulation-algorithm" data-ice="link">Simulation algorithm</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/introCPM.html"><a href="manual/introCPM.html#the-hamiltonian" data-ice="link">The Hamiltonian</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/introCPM.html"><a href="manual/introCPM.html#adhesion" data-ice="link">Adhesion</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/introCPM.html"><a href="manual/introCPM.html#volume" data-ice="link">Volume</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/introCPM.html"><a href="manual/introCPM.html#perimeter" data-ice="link">Perimeter</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/introCPM.html"><a href="manual/introCPM.html#cell-motion--extrinsic" data-ice="link">Cell motion: extrinsic</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/introCPM.html"><a href="manual/introCPM.html#cell-motion--intrinsic" data-ice="link">Cell motion: intrinsic</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/introCPM.html"><a href="manual/introCPM.html#enforcing-cell-connectivity" data-ice="link">Enforcing cell connectivity</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/introCPM.html"><a href="manual/introCPM.html#references" data-ice="link">References</a></li>
</ul>
  </div>
<div data-ice="manual">
    <ul class="manual-toc">
      
    <li data-ice="manualNav" class="indent-h1" data-link="manual/installation.html"><a href="manual/installation.html" data-ice="link">Getting started</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/installation.html"><a href="manual/installation.html#set-up-artistoo-in-3-easy-steps" data-ice="link">Set up Artistoo in 3 easy steps</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/installation.html"><a href="manual/installation.html#step-1--download-the-repository-" data-ice="link">Step 1: download the repository.</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/installation.html"><a href="manual/installation.html#step-2--install-node-dependencies-" data-ice="link">Step 2: install node dependencies.</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/installation.html"><a href="manual/installation.html#step-3--link-the-build-in-your-code-" data-ice="link">Step 3: link the build in your code.</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/installation.html"><a href="manual/installation.html#additional-notes" data-ice="link">Additional notes</a></li>
</ul>
  </div>
<div data-ice="manual">
    <ul class="manual-toc">
      
    <li data-ice="manualNav" class="indent-h1" data-link="manual/quickstart.html"><a href="manual/quickstart.html" data-ice="link">Your First Simulation</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/quickstart.html"><a href="manual/quickstart.html#set-up-a-simulation-in-the-web-browser" data-ice="link">Set up a simulation in the web browser</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/quickstart.html"><a href="manual/quickstart.html#an-html-template-page" data-ice="link">An HTML template page</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/quickstart.html"><a href="manual/quickstart.html#set-up-a-simulation-in-nodejs" data-ice="link">Set up a simulation in nodejs</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/quickstart.html"><a href="manual/quickstart.html#writing-your-simulation" data-ice="link">Writing your simulation</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/quickstart.html"><a href="manual/quickstart.html#step-1---configure-the-cpm--amp--simulation" data-ice="link">Step 1 : Configure the CPM &amp; Simulation</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/quickstart.html"><a href="manual/quickstart.html#step-2--create-a-simulation-object" data-ice="link">Step 2: Create a simulation object</a></li>
<li data-ice="manualNav" class="indent-h4" data-link="manual/quickstart.html"><a href="manual/quickstart.html#in-nodejs" data-ice="link">In nodejs</a></li>
<li data-ice="manualNav" class="indent-h4" data-link="manual/quickstart.html"><a href="manual/quickstart.html#in-html" data-ice="link">In HTML</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/quickstart.html"><a href="manual/quickstart.html#step-3---tell-the-simulation-to-run" data-ice="link">Step 3 : Tell the simulation to run</a></li>
<li data-ice="manualNav" class="indent-h4" data-link="manual/quickstart.html"><a href="manual/quickstart.html#in-nodejs" data-ice="link">In nodejs</a></li>
<li data-ice="manualNav" class="indent-h4" data-link="manual/quickstart.html"><a href="manual/quickstart.html#in-html" data-ice="link">In HTML</a></li>
</ul>
  </div>
<div data-ice="manual">
    <ul class="manual-toc">
      
    <li data-ice="manualNav" class="indent-h1" data-link="manual/htmlTemplate.html"><a href="manual/htmlTemplate.html" data-ice="link">An HTML template page</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/htmlTemplate.html"><a href="manual/htmlTemplate.html#an-html-template" data-ice="link">An HTML template</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/htmlTemplate.html"><a href="manual/htmlTemplate.html#step-1---create-a-basic-html-page" data-ice="link">Step 1 : Create a basic HTML page</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/htmlTemplate.html"><a href="manual/htmlTemplate.html#step-2---configure-the-header" data-ice="link">Step 2 : Configure the header</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/htmlTemplate.html"><a href="manual/htmlTemplate.html#step-3---add-javascript" data-ice="link">Step 3 : Add JavaScript</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/htmlTemplate.html"><a href="manual/htmlTemplate.html#step-4--write-the-body" data-ice="link">Step 4: Write the body</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/htmlTemplate.html"><a href="manual/htmlTemplate.html#step-5--optional---add-css" data-ice="link">Step 5 (optional): Add CSS</a></li>
</ul>
  </div>
<div data-ice="manual">
    <ul class="manual-toc">
      
    <li data-ice="manualNav" class="indent-h1" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html" data-ice="link">Configuring Simulations (1)</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#configuring-the-cpm-itself" data-ice="link">Configuring the CPM itself</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#changing-cpm-constraints" data-ice="link">Changing CPM constraints</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#configuring-the-grid" data-ice="link">Configuring the grid</a></li>
<li data-ice="manualNav" class="indent-h4" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#-strong-field-size--strong-" data-ice="link">Field size</a></li>
<li data-ice="manualNav" class="indent-h4" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#-strong-grid-boundaries--strong-" data-ice="link">Grid boundaries</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#setting-a-seed" data-ice="link">Setting a seed</a></li>
<li data-ice="manualNav" class="indent-h2" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#configuring-the-simulation-object" data-ice="link">Configuring the Simulation object</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#controlling-the-simulation" data-ice="link">Controlling the simulation</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#controlling-the-visualization" data-ice="link">Controlling the visualization</a></li>
<li data-ice="manualNav" class="indent-h3" data-link="manual/simulationConfig.html"><a href="manual/simulationConfig.html#controlling-outputs" data-ice="link">Controlling outputs</a></li>
</ul>
  </div>
</div>
</nav>

<div class="content" data-ice="content"><div class="github-markdown" data-ice="content"><h1 id="configuring-simulations--1-">Configuring Simulations (1)</h1>


















<p>Once you have written a <a href="./manual/quickstart.html">fist simulation</a>, you can make
it more complex by adding different CPM energy constraints, 
or you can increase the number of cells in your simulation and examine 
interactions between different cell types. 


















</p>



















<p>The <a href="./manual/../class/src/simulation/Simulation.js~Simulation.html">Simulation class</a>
allows you to make many of those changes by simply modifying the its
<a href="./manual/quickstart.html">configation object</a>, which will be the topic of this tutorial. 
The next tutorial will show you how you can make even more advanced simulations 
by writing custom functions - but for now we will focus on changes you can make
through configuration only. 


















</p>



















<p>We will start from this very simple simulation from the 
<a href="./manual/quickstart.html">previous tutorial</a>:


















</p>



















<p><div>
&lt;iframe src=&quot;./manual/asset/SingleCell.html&quot; width=&quot;350px&quot; height=&quot;400px&quot;&gt; &lt;/iframe&gt;
</div>




















</p>



















<p>This tutorial assumes you have completed the previous tutorial, and we will 
examine the <code>config</code> object of the simulation you generated there in more detail:


















</p>
<pre><code class="lang-$xslt"><code class="source-code prettyprint">let config = {

    // Grid settings
    field_size : [100,100],

    // CPM parameters and configuration
    conf : {
        T : 20,                                // CPM temperature

        // Adhesion parameters:
        J: [[0,20], [20,100]] ,

        // VolumeConstraint parameters
        LAMBDA_V : [0,50],                // VolumeConstraint importance per cellkind
        V : [0,500]                        // Target volume of each cellkind
    },

    // Simulation setup and configuration
    simsettings : {
        // Cells on the grid
        NRCELLS : [1],                    // Number of cells to seed for all
                                        // non-background cellkinds.

        RUNTIME : 500,                  // Only used in node

        CANVASCOLOR : &quot;eaecef&quot;,
        zoom : 4                        // zoom in on canvas with this factor.
    }
}</code>
</code></pre>



















<p>We will now see how changes to this object can alter the simulation. 


















</p>
<h2 id="configuring-the-cpm-itself">Configuring the CPM itself</h2>


















<p>First, let&apos;s see how we can control the <a href="./manual/../class/src/models/CPM.js~CPM.html">CPM model class</a> itself. For this lesson,
we recommend starting from the HTML version of the simulation in the 
<a href="./manual/quickstart.html">previous tutorial</a>. This HTML version will allow you to
see the effect of your changes more quickly than running a node script would.


















</p>
<h3 id="changing-cpm-constraints">Changing CPM constraints</h3>


















<p>As we&apos;ve seen before, the <code>config</code> object has three parts: the <code>field_size</code>, 
the <code>conf</code>, and the <code>simsettings</code>. We will now look at the <code>conf</code> part, which
controls the CPM model itself.


















</p>
<pre><code class="lang-$xslt"><code class="source-code prettyprint">    // CPM parameters and configuration
    conf : {
        T : 20,                                // CPM temperature

        // Adhesion parameters:
        J: [[0,20], [20,100]] ,

        // VolumeConstraint parameters
        LAMBDA_V : [0,50],                // VolumeConstraint importance per cellkind
        V : [0,500]                        // Target volume of each cellkind
    },</code>
</code></pre>



















<p>Remember that CPMs work by defining a &quot;global energy&quot; in the form of an equation
called the <em>Hamiltonian</em>. Whether or not a pixel changes in the CPM then depends
on how this would change the global energy: if the pixel change <em>decreases</em> the
global energy (=energetically favourable), the pixel change will happen. If it
would <em>increase</em> the global energy, 


















</p>
<h3 id="configuring-the-grid">Configuring the grid</h3><h4 id="-strong-field-size--strong-"><strong>Field size</strong></h4>


















<p>Open your file <code>MyFirstSimulation.html</code> from the previous tutorial in the web
browser. You should see a black cell floating inside a square gray area, which
is the field or &quot;grid&quot; the simulation runs in. 


















</p>



















<p>The size of this grid is controlled by <code>field_size</code> in the <code>config</code> object.
The entry 


















</p>
<pre><code class="lang-$xslt"><code class="source-code prettyprint">    // Grid settings
    field_size : [100,100],</code>
</code></pre>



















<p>ensures that the simulation is performed on a 100 x 100 pixel (2D) grid. We
can change the size of this grid by changing the numbers <code>x</code> and <code>y</code> between
the square brackets: <code>[x,y]</code>, where <code>x</code> controls the grid&apos;s width and 
<code>y</code> controls its height. For example, changing this setting to:


















</p>
<pre><code class="lang-$xslt"><code class="source-code prettyprint">    // Grid settings
    field_size : [150,100],</code>
</code></pre>



















<p>makes the grid slightly broader, but equally high as before.


















</p>



















<p><strong>Exercise</strong> : 


















</p>



















<p><em>How would you make a grid with a width of 100 pixels and a
height of 200 pixels? Open your file</em> <code>MyFirstSimulation.html</code> <em>in your 
favourite text editor, change the</em> <code>field_size</code> <em>in the appropriate manner, and
save the file. Now open</em> <code>MyFirstSimulation.html</code> <em>in your web browser (or just
refresh the page if you had already done so). Did it work?</em>


















</p>
<h4 id="-strong-grid-boundaries--strong-"><strong>Grid boundaries</strong></h4><h3 id="setting-a-seed">Setting a seed</h3><h2 id="configuring-the-simulation-object">Configuring the Simulation object</h2><h3 id="controlling-the-simulation">Controlling the simulation</h3><h3 id="controlling-the-visualization">Controlling the visualization</h3><h3 id="controlling-outputs">Controlling outputs</h3></div>
</div>

<footer class="footer">
  Generated by <a href="https://esdoc.org">ESDoc<span data-ice="esdocVersion">(1.1.0)</span><img src="./image/esdoc-logo-mini-black.png"></a>
</footer>

<script src="script/search_index.js"></script>
<script src="script/search.js"></script>
<script src="script/pretty-print.js"></script>
<script src="script/inherited-summary.js"></script>
<script src="script/test-summary.js"></script>
<script src="script/inner-link.js"></script>
<script src="script/patch-for-local.js"></script>
</body>
</html>
